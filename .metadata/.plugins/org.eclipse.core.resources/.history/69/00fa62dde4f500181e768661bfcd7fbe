package com.latam.certification.tasks;

import com.latam.certification.models.LoginModel;
import com.latam.certification.models.SearchFlightModel;
import com.latam.certification.userinterfaces.SearchFlightComponent;

import net.serenitybdd.core.steps.Instrumented;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.actions.Click;
import net.serenitybdd.screenplay.actions.Enter;
import net.serenitybdd.screenplay.conditions.Check;

public class EnterDataSearch implements Task {
	
	private SearchFlightModel searchFlightData;

	
	public EnterDataSearch(SearchFlightModel searchFlightData) {
		this.searchFlightData= searchFlightData;
	}
	
	@Override
	public <T extends Actor> void performAs(T actor) {
		
		actor.attemptsTo(Enter.theValue(this.searchFlightData.getOrigin()).into(SearchFlightComponent.ORIGIN_FLIGHT),
						Click.on(SearchFlightComponent.FIRST_OPTION_ORIGIN)
						Enter.theValue(this.searchFlightData.getDestination()).into(SearchFlightComponent.DESTINATION_FLIGHT),
						Check.whether(searchFlightData.getFlightTypes().equals("Solo ida")).
				                andIfSo(Click.on(SearchFlightComponent.FLIGHT_TYPE_ONE_WAY)),
						Check.whether(searchFlightData.getFlightTypes().equals("Ida y Vuelta")).
				               andIfSo(Click.on(SearchFlightComponent.FLIGHT_TYPE_ROUND_TRIP)),
						Enter.theValue(this.searchFlightData.getDepartureDate()).into(SearchFlightComponent.DEPARTURE_DATE),
						Click.on(SearchFlightComponent.PASSENGER_COUNT),
						Click.on(SearchFlightComponent.SUBMIT_SEARCH_FLIGH)


				);
		
	}
	
	public static EnterDataSearch flight(SearchFlightModel searchFlightData) {
		return Instrumented.instanceOf(EnterDataSearch.class)
				.withProperties(searchFlightData);
		
	}

}
