package com.latam.certification.tasks;

import static net.serenitybdd.screenplay.Tasks.instrumented;

import net.serenitybdd.core.pages.PageObject;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Task;
import net.serenitybdd.screenplay.actions.Open;
import net.thucydides.core.annotations.Step;
import com.latam.certification.exceptions.WhitOutConnectionToTheLatam;
import static com.latam.certification.exceptions.WhitOutConnectionToTheLatam.getNoLoadsCorrectlyMessage;
import static net.serenitybdd.screenplay.GivenWhenThen.seeThat;
import com.latam.certification.questions.LatamLoads;

public class OpenTheApplication implements Task {

	private PageObject page;
	
	public OpenTheApplication(PageObject page) {
		this.page= page;
	}
	
	@Step("{0} opens the browser on '#page'")

	@Override
	public <T extends Actor> void performAs(T actor) {
		actor.attemptsTo(Open.browserOn(page));
		// Verifica que efectivamente se abre la pagina, de lo contrario arroja un
		// AssertionError
		actor.should(seeThat(LatamLoads.Correctly()).orComplainWith(WhitOutConnectionToTheLatam.class,
						getNoLoadsCorrectlyMessage()));
	}
	
	//Este método retorna una instancia de la clase, instrumented es los mismo que return new
	public static OpenTheApplication on(PageObject page) {
		return instrumented(OpenTheApplication.class,page);
		
	}

}
